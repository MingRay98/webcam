{"version":3,"sources":["component/Header.js","component/Photo.js","component/Video.js","App.js","Main.js","serviceWorker.js","index.js"],"names":["Header","props","init","window","isMobile","className","onClick","handleCameraChange","style","justifyContent","state","this","Component","Photo","id","canvasWidth","canvasHeight","imageWidth","imageHeight","dx","dy","scale","Video","startSlide","e","slider","addEventListener","moveSlide","parseFloat","target","value","videoCanvas","width","height","stopSlide","removeEventListener","drawVideoToCanvas","ctx","getContext","clearRect","drawImage","video","requestAnimationFrame","handleTurnStream","console","log","innerHTML","stopStream","getVideoStream","srcObject","getTracks","forEach","track","stop","takePhoto","photoCanvas","setState","imgSrc","toDataURL","drawPhoto","document","getElementById","display","img","Image","onload","src","downloadCanvasIamge","downloadImg","href","download","click","innerWidth","alert","navigator","mediaDevices","getUserMedia","constraints","videoStream","align","autoPlay","videoCanvasStyle","type","min","max","step","defaultValue","facing","test","userAgent","facingMode","audio","blur","App","exact","buttonTurn","addBlur","filter","minusBlur","desktopList","Boolean","location","hostname","match","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c96dd2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css'\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  init = () => {\r\n    if (window.isMobile)\r\n      return (\r\n        <div className='header'>\r\n          <button className='headerBtn'>++</button>\r\n          Webcam\r\n        < button className='headerBtn' onClick={this.props.handleCameraChange} > turn</button >\r\n        </div>)\r\n    else\r\n      return (\r\n        <div className='header' style={{justifyContent:'center'}}>\r\n          Webcam\r\n      </div>)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        {this.init()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\n\r\nclass Photo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <canvas id='photoCanvas' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Photo;","import React, { Component } from 'react';\r\nimport Photo from './Photo'\r\nlet canvasWidth = null, canvasHeight = null;\r\nlet imageWidth = 0\r\nlet imageHeight = 0\r\nlet dx = 0\r\nlet dy = 0\r\nlet scale = 1\r\n\r\nfunction init (){\r\n  if (window.isMobile) {\r\n    canvasWidth = window.innerWidth;\r\n    canvasHeight = canvasWidth * 4 / 3;\r\n    alert('手機模式')\r\n  }\r\n  else {\r\n    canvasWidth = window.innerWidth * 0.49;\r\n    canvasHeight = canvasWidth * 0.5625;\r\n  }\r\n   imageWidth = canvasWidth\r\n   imageHeight = canvasHeight\r\n}\r\n\r\nclass Video extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imgSrc: '',\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    init ();\r\n    this.videoCanvas = document.getElementById('videoCanvas');\r\n    this.video = document.getElementById('video');\r\n    this.videoCanvas.width = canvasWidth;\r\n    this.videoCanvas.height = canvasHeight;\r\n    this.getVideoStream();\r\n    this.drawVideoToCanvas();\r\n\r\n    this.photoCanvas = document.getElementById('photoCanvas');\r\n\r\n    this.slider = document.getElementById('slider');\r\n    this.slider.addEventListener('mousedown', this.startSlide, false);\r\n    this.slider.addEventListener('mouseup', this.stopSlide, false);\r\n    this.slider.addEventListener('touchstart', this.startSlide, false);\r\n    this.slider.addEventListener('touchend', this.stopSlide, false);\r\n\r\n  }\r\n\r\n  startSlide = (e) => {\r\n    this.slider.addEventListener('mousemove', this.moveSlide, false);\r\n    this.slider.addEventListener('touchmove', this.moveSlide, false);\r\n\r\n  }\r\n  moveSlide = (e) => {\r\n    scale = parseFloat(e.target.value);\r\n\r\n    imageWidth = canvasWidth * scale;\r\n    imageHeight = canvasHeight * scale;\r\n\r\n    //畫布上的起始點：畫布的大小一半減去圖像大小的一半。可以為負數，表示在左上角的外面。\r\n    dx = this.videoCanvas.width / 2 - imageWidth / 2;\r\n    dy = this.videoCanvas.height / 2 - imageHeight / 2;\r\n\r\n  }\r\n  stopSlide = (e) => {\r\n    this.slider.removeEventListener('mousemove', this.moveSlide, false);\r\n    this.slider.removeEventListener('touchmove', this.moveSlide, false);\r\n\r\n  }\r\n\r\n  async getVideoStream() {\r\n    try {\r\n      const videoStream = await navigator.mediaDevices.getUserMedia(this.props.constraints)\r\n      this.video.srcObject = videoStream;\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  drawVideoToCanvas = () => {\r\n    let ctx = this.videoCanvas.getContext('2d')\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n    ctx.drawImage(this.video, dx, dy, imageWidth, imageHeight);\r\n    requestAnimationFrame(this.drawVideoToCanvas);\r\n  }\r\n\r\n  handleTurnStream = (e) => {\r\n    console.log(e.target.innerHTML)\r\n    if (e.target.innerHTML === 'turn Off') {\r\n      this.stopStream();\r\n      e.target.innerHTML = \"turn On\"\r\n    }\r\n    else {\r\n      this.getVideoStream();\r\n      this.drawVideoToCanvas();\r\n      e.target.innerHTML = \"turn Off\"\r\n    }\r\n  }\r\n\r\n  stopStream = () => {\r\n    let stream = this.video.srcObject;\r\n    let tracks = stream.getTracks();\r\n    tracks.forEach(function (track) {\r\n      track.stop();\r\n    });\r\n    this.video.srcObject = null;\r\n  }\r\n\r\n  takePhoto = () => {\r\n    this.photoCanvas.width = canvasWidth\r\n    this.photoCanvas.height = canvasHeight\r\n    this.setState({ imgSrc: this.videoCanvas.toDataURL() }, () => { this.drawPhoto() });\r\n    document.getElementById('savePhoto').style = { display: '' };\r\n  }\r\n\r\n  drawPhoto = () => {\r\n    const ctx = this.photoCanvas.getContext('2d');\r\n    let img = new Image()\r\n    img.onload = () => {\r\n      if (scale >= 1)\r\n        ctx.drawImage(img, 0, 0);\r\n      else {\r\n        this.photoCanvas.width = canvasWidth * scale;\r\n        this.photoCanvas.height = canvasHeight * scale;\r\n        ctx.drawImage(img, -dx, -dy);\r\n      }\r\n    }\r\n    img.src = this.state.imgSrc;\r\n  }\r\n\r\n  downloadCanvasIamge = (e) => {\r\n    let downloadImg = document.getElementById('downloadImg');\r\n    downloadImg.href = this.photoCanvas.toDataURL();\r\n    downloadImg.download = \"photo.png\";\r\n    downloadImg.click();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div align=\"center\">\r\n        <video autoPlay={true} id=\"video\" style={{ display: 'none' }} />\r\n        <canvas id=\"videoCanvas\" style={this.props.videoCanvasStyle} className='Stream' /><br />\r\n        <input type=\"range\" min=\"0.5\" max=\"1.5\" step=\"0.1\" defaultValue=\"1\" id=\"slider\" className=\"slider\"\r\n          style={{ width: canvasWidth - 10, height: '1rem' }} /><br />\r\n        <button id='turn' onClick={this.handleTurnStream}>turn Off</button>\r\n        <button onClick={this.takePhoto}>take photo</button>\r\n        <button id='savePhoto' style={{ display: 'none' }} onClick={this.downloadCanvasIamge}>save photo</button>\r\n        <a id='downloadImg'></a>\r\n        <Photo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Video;","import React, { Component } from 'react';\nimport Header from './component/Header'\nimport Photo from './component/Photo'\nimport Video from './component/Video'\nimport './App.css'\n\nlet facing = \"user\"\nvar isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\nwindow.isMobile = isMobile;\n\nlet constraints = {\n  video: { facingMode: 'user' },\n  audio: false\n}\n\nlet blur = 0\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoCanvasStyle:{\n        filter: 'blur(0px)',\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.buttonTurn = document.getElementById('turn');\n  }\n\n\n  handleCameraChange = () => {\n    if (isMobile)\n      if (facing === 'user') {\n        facing = 'environment'\n        constraints = { audio: false, video: { facingMode: { exact: \"environment\" } } }\n      }\n      else {\n        facing = 'user'\n        constraints = { audio: false, video: { facingMode: \"user\" } }\n      }\n    else\n      console.log('Isn\\'t molibe ');\n\n    this.buttonTurn.click();\n    this.buttonTurn.click();\n  }\n\n  addBlur = () => {\n    console.log(blur = blur+1 )\n    this.setState({videoCanvasStyle:{filter:\"blur(\"+blur+\"px\"+\")\"}})\n  }\n  minusBlur = () => {\n    console.log(blur = blur-1 )\n    this.setState({videoCanvasStyle:{filter:\"blur(\"+blur+\"px\"+\")\"}})\n  }\n\n  desktopList = () => {\n\n    if (!isMobile) {\n      return (\n        <div style={{display:\"flex\"}}>\n          <div style={{ width: \"50vw\" }}>\n            <Video facing={facing} constraints={constraints} videoCanvasStyle={this.state.videoCanvasStyle} />\n          </div>\n          <div className=\"desktopList\" style={{ width: \"50vw\" }}>\n            \n            <button onClick={this.addBlur }>++</button>\n            blur:{this.state.videoCanvasStyle.filter}\n            <button onClick={this.minusBlur}>--</button>\n        </div>\n        </div>\n      )\n    } else {\n      return <Video facing={facing} constraints={constraints} />\n    }\n  }\n\n  render() {\n    return (\n      <div >\n        <Header handleCameraChange={this.handleCameraChange} />\n        {this.desktopList()}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\r\nimport './App.css'\r\n\r\nlet imageWidth = '1080'\r\nlet imageHeight = '720'\r\nlet dx = ''\r\nlet dy = ''\r\nlet scale = '1'\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imgSrc: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.canvas = document.getElementById('canvas');\r\n    this.canvas2 = document.getElementById('canvas2');\r\n    this.video = document.getElementById('video');\r\n    this.slider = document.getElementById('slider');\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n\r\n    this.canvas2.width = 1024;\r\n    this.canvas2.height = 768;\r\n    this.startVideo();\r\n    this.drawVideoToCanvas();\r\n    this.slider.onchange = this.handleSliderChange;\r\n    window.addEventListener(\"resize\", this.resizeCanvas, false);\r\n  }\r\n\r\n  componentWillMount() {\r\n  }\r\n\r\n  resizeCanvas =() => {\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n    console.log(window.innerWidth,window.innerHeight)\r\n  }\r\n\r\n  handleSliderChange = (e) => {\r\n    scale = parseFloat(e.target.value);\r\n\r\n    imageWidth = 1024 * scale;\r\n    imageHeight = 768 * scale;\r\n    if (scale <= 1) {\r\n      this.canvas.width = imageWidth\r\n      this.canvas.height = imageHeight\r\n    }\r\n    //畫布上的起始點：畫布的大小一半減去圖像大小的一半。可以為負數，表示在左上角的外面。\r\n    dx = this.canvas.width / 2 - imageWidth / 2;\r\n    dy = this.canvas.height / 2 - imageHeight / 2;\r\n\r\n  }\r\n\r\n\r\n  async startVideo() {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          // width: { min: 1080, ideal: 1280, max: 1920 },\r\n          // height: { min: 720, ideal: 720, max: 1080 }\r\n        },\r\n        audio: false\r\n      });\r\n      this.video.srcObject = stream;\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  stopStream = () => {\r\n    let stream = this.video.srcObject;\r\n    let tracks = stream.getTracks();\r\n\r\n    console.log(stream, tracks)\r\n\r\n    tracks.forEach(function (track) {\r\n      track.stop();\r\n    });\r\n\r\n    this.video.srcObject = null;\r\n  }\r\n\r\n  drawVideoToCanvas = () => {\r\n\r\n    let ctx = this.canvas.getContext('2d')\r\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    ctx.drawImage(this.video, dx, dy, imageWidth, imageHeight);\r\n\r\n\r\n\r\n    requestAnimationFrame(this.drawVideoToCanvas);\r\n\r\n  }\r\n\r\n  draw = () => {\r\n\r\n    var ctx = document.getElementById('canvas2').getContext('2d');\r\n    var img = new Image();\r\n    img.onload = function () {\r\n      ctx.scale(-1, 1);\r\n      ctx.translate(-1080, 0);\r\n      ctx.drawImage(img, 0, 0);\r\n    };\r\n    img.src = this.state.imgSrc;\r\n\r\n  }\r\n\r\n  takePhoto = () => {\r\n    this.canvas2.width = imageWidth\r\n    this.canvas2.height = imageHeight\r\n    this.setState({ imgSrc: this.canvas.toDataURL() }, () => { this.draw() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div align=\"center\">\r\n        <video autoPlay={true} id=\"video\" style={{ display: 'none' }} />\r\n        <canvas id=\"canvas\" className='Stream' /><br />\r\n        <input type=\"range\" min=\"0.5\" max=\"1.5\" step=\"0.1\" defaultValue=\"1\" id=\"slider\" />\r\n        <button onClick={this.stopStream}>stop stream</button>\r\n        <button onClick={this.takePhoto}>take a photo</button><br />\r\n        <canvas id=\"canvas2\" /><br />\r\n        {/* <img alt='' id=\"photocut\" src={this.state.imgSrc} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Main from './Main'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}