{"version":3,"sources":["component/Header.js","component/Photo.js","component/Video.js","App.js","Main.js","serviceWorker.js","index.js"],"names":["Header","props","state","className","onClick","this","handleCameraChange","Component","Photo","id","canvasWidth","canvasHeight","test","navigator","userAgent","window","innerWidth","imageWidth","imageHeight","dx","dy","scale","Video","startSlide","e","slider","addEventListener","moveSlide","parseFloat","target","value","videoCanvas","width","height","stopSlide","removeEventListener","drawVideoToCanvas","ctx","getContext","clearRect","drawImage","video","requestAnimationFrame","handleTurnStream","console","log","innerHTML","stopStream","getVideoStream","srcObject","getTracks","forEach","track","stop","takePhoto","photoCanvas","setState","imgSrc","toDataURL","drawPhoto","img","Image","onload","src","downloadCanvasIamge","downloadImg","document","getElementById","href","download","click","mediaDevices","getUserMedia","constraints","videoStream","alert","autoPlay","style","display","type","min","max","step","defaultValue","facing","isMoblie","App","audio","facingMode","exact","Boolean","location","hostname","match","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.272c8724.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css'\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='header'>\r\n        <button className='headerBtn' >++</button>\r\n        Webcam\r\n       <button className='headerBtn' onClick={this.props.handleCameraChange} >turn</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\n\r\nclass Photo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <canvas id='photoCanvas' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Photo;","import React, { Component } from 'react';\r\nimport Photo from './Photo'\r\nlet canvasWidth = null, canvasHeight = null;\r\n\r\nvar isMoblie = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\nif (isMoblie) {\r\n  canvasWidth = window.innerWidth;\r\n  canvasHeight = canvasWidth * 0.7;\r\n}\r\nelse {\r\n  canvasWidth = window.innerWidth * 0.35;\r\n  canvasHeight = canvasWidth * 0.5625;\r\n}\r\n\r\nlet imageWidth = canvasWidth\r\nlet imageHeight = canvasHeight\r\nlet dx = 0\r\nlet dy = 0\r\nlet scale = 1\r\n\r\nclass Video extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imgSrc: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.videoCanvas = document.getElementById('videoCanvas');\r\n    this.video = document.getElementById('video');\r\n    this.videoCanvas.width = canvasWidth;\r\n    this.videoCanvas.height = canvasHeight;\r\n    this.getVideoStream();\r\n    this.drawVideoToCanvas();\r\n\r\n    this.photoCanvas = document.getElementById('photoCanvas');\r\n\r\n    this.slider = document.getElementById('slider');\r\n    this.slider.addEventListener('mousedown', this.startSlide, false);\r\n    this.slider.addEventListener('mouseup', this.stopSlide, false);\r\n    this.slider.addEventListener('touchstart', this.startSlide, false);\r\n    this.slider.addEventListener('touchend', this.stopSlide, false);\r\n\r\n  }\r\n\r\n  startSlide = (e) => {\r\n    this.slider.addEventListener('mousemove', this.moveSlide, false);\r\n    this.slider.addEventListener('touchmove', this.moveSlide, false);\r\n\r\n  }\r\n  moveSlide = (e) => {\r\n    scale = parseFloat(e.target.value);\r\n\r\n    imageWidth = canvasWidth * scale;\r\n    imageHeight = canvasHeight * scale;\r\n\r\n    //畫布上的起始點：畫布的大小一半減去圖像大小的一半。可以為負數，表示在左上角的外面。\r\n    dx = this.videoCanvas.width / 2 - imageWidth / 2;\r\n    dy = this.videoCanvas.height / 2 - imageHeight / 2;\r\n\r\n  }\r\n  stopSlide = (e) => {\r\n    this.slider.removeEventListener('mousemove', this.moveSlide, false);\r\n    this.slider.removeEventListener('touchmove', this.moveSlide, false);\r\n\r\n  }\r\n\r\n  async getVideoStream() {\r\n    try {\r\n      const videoStream = await navigator.mediaDevices.getUserMedia(this.props.constraints)\r\n      this.video.srcObject = videoStream;\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  drawVideoToCanvas = () => {\r\n    let ctx = this.videoCanvas.getContext('2d')\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n    ctx.drawImage(this.video, dx, dy, imageWidth, imageHeight);\r\n    requestAnimationFrame(this.drawVideoToCanvas);\r\n  }\r\n\r\n  handleTurnStream = (e) => {\r\n    console.log(e.target.innerHTML)\r\n    if (e.target.innerHTML === 'turn Off') {\r\n      this.stopStream();\r\n      e.target.innerHTML = \"turn On\"\r\n    }\r\n    else {\r\n      this.getVideoStream();\r\n      this.drawVideoToCanvas();\r\n      e.target.innerHTML = \"turn Off\"\r\n    }\r\n  }\r\n\r\n  stopStream = () => {\r\n    let stream = this.video.srcObject;\r\n    let tracks = stream.getTracks();\r\n    tracks.forEach(function (track) {\r\n      track.stop();\r\n    });\r\n    this.video.srcObject = null;\r\n  }\r\n\r\n  takePhoto = () => {\r\n    this.photoCanvas.width = canvasWidth\r\n    this.photoCanvas.height = canvasHeight\r\n    this.setState({ imgSrc: this.videoCanvas.toDataURL() }, () => { this.drawPhoto() });\r\n  }\r\n\r\n  drawPhoto = () => {\r\n    const ctx = this.photoCanvas.getContext('2d');\r\n    let img = new Image()\r\n    img.onload = () => {\r\n      ctx.drawImage(img, 0, 0);\r\n    }\r\n    img.src = this.state.imgSrc;\r\n  }\r\n\r\n  downloadCanvasIamge = (e) => {\r\n    let downloadImg = document.getElementById('downloadImg');\r\n    downloadImg.href = this.photoCanvas.toDataURL();\r\n    downloadImg.download = \"photo.png\";\r\n    downloadImg.click();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <video autoPlay={true} id=\"video\" style={{ display: 'none' }} />\r\n        <canvas id=\"videoCanvas\" className='Stream' /><br />\r\n        <input type=\"range\" min=\"0.5\" max=\"1.5\" step=\"0.1\" defaultValue=\"1\" id=\"slider\" className=\"slider\"\r\n          style={{ width: canvasWidth - 10, height: '1rem' }} /><br />\r\n        <button onClick={this.handleTurnStream}>turn Off</button>\r\n        <button onClick={this.takePhoto}>take photo</button>\r\n        <button id='savePhoto' onClick={this.downloadCanvasIamge}>save photo</button>\r\n        <a id='downloadImg'></a>\r\n        <Photo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Video;","import React, { Component } from 'react';\nimport Header from './component/Header'\nimport Photo from './component/Photo'\nimport Video from './component/Video'\nimport './App.css'\n\nlet facing = \"user\"\nvar isMoblie = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //增加constrans 來改\n      constraints: {\n        video: { facingMode: { exact: \"environment\" } },\n        audio: false\n      },\n    };\n  }\n\n  handleCameraChange = () => {\n    if (isMoblie)\n      if (facing === 'user') {\n        facing = 'environment'\n        this.setState({ constraints: { audio: false, video: { facingMode: { exact: \"environment\" } } } })\n      }\n      else {\n        facing = 'user'\n        this.setState({ constraints: { audio: false, video: { facingMode: \"user\" } } })\n      }\n    else\n      console.log('Isn\\'t molibe ');\n  }\n\n  render() {\n    return (\n      <div >\n        <Header handleCameraChange={this.handleCameraChange} />\n        <Video facing={facing} constraints={this.state.constraints} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\r\nimport './App.css'\r\n\r\nlet imageWidth = '1080'\r\nlet imageHeight = '720'\r\nlet dx = ''\r\nlet dy = ''\r\nlet scale = '1'\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imgSrc: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.canvas = document.getElementById('canvas');\r\n    this.canvas2 = document.getElementById('canvas2');\r\n    this.video = document.getElementById('video');\r\n    this.slider = document.getElementById('slider');\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n\r\n    this.canvas2.width = 1024;\r\n    this.canvas2.height = 768;\r\n    this.startVideo();\r\n    this.drawVideoToCanvas();\r\n    this.slider.onchange = this.handleSliderChange;\r\n    window.addEventListener(\"resize\", this.resizeCanvas, false);\r\n  }\r\n\r\n  componentWillMount() {\r\n  }\r\n\r\n  resizeCanvas =() => {\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n    console.log(window.innerWidth,window.innerHeight)\r\n  }\r\n\r\n  handleSliderChange = (e) => {\r\n    scale = parseFloat(e.target.value);\r\n\r\n    imageWidth = 1024 * scale;\r\n    imageHeight = 768 * scale;\r\n    if (scale <= 1) {\r\n      this.canvas.width = imageWidth\r\n      this.canvas.height = imageHeight\r\n    }\r\n    //畫布上的起始點：畫布的大小一半減去圖像大小的一半。可以為負數，表示在左上角的外面。\r\n    dx = this.canvas.width / 2 - imageWidth / 2;\r\n    dy = this.canvas.height / 2 - imageHeight / 2;\r\n\r\n  }\r\n\r\n\r\n  async startVideo() {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          // width: { min: 1080, ideal: 1280, max: 1920 },\r\n          // height: { min: 720, ideal: 720, max: 1080 }\r\n        },\r\n        audio: false\r\n      });\r\n      this.video.srcObject = stream;\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  stopStream = () => {\r\n    let stream = this.video.srcObject;\r\n    let tracks = stream.getTracks();\r\n\r\n    console.log(stream, tracks)\r\n\r\n    tracks.forEach(function (track) {\r\n      track.stop();\r\n    });\r\n\r\n    this.video.srcObject = null;\r\n  }\r\n\r\n  drawVideoToCanvas = () => {\r\n\r\n    let ctx = this.canvas.getContext('2d')\r\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    ctx.drawImage(this.video, dx, dy, imageWidth, imageHeight);\r\n\r\n\r\n\r\n    requestAnimationFrame(this.drawVideoToCanvas);\r\n\r\n  }\r\n\r\n  draw = () => {\r\n\r\n    var ctx = document.getElementById('canvas2').getContext('2d');\r\n    var img = new Image();\r\n    img.onload = function () {\r\n      ctx.scale(-1, 1);\r\n      ctx.translate(-1080, 0);\r\n      ctx.drawImage(img, 0, 0);\r\n    };\r\n    img.src = this.state.imgSrc;\r\n\r\n  }\r\n\r\n  takePhoto = () => {\r\n    this.canvas2.width = imageWidth\r\n    this.canvas2.height = imageHeight\r\n    this.setState({ imgSrc: this.canvas.toDataURL() }, () => { this.draw() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div align=\"center\">\r\n        <video autoPlay={true} id=\"video\" style={{ display: 'none' }} />\r\n        <canvas id=\"canvas\" className='Stream' /><br />\r\n        <input type=\"range\" min=\"0.5\" max=\"1.5\" step=\"0.1\" defaultValue=\"1\" id=\"slider\" />\r\n        <button onClick={this.stopStream}>stop stream</button>\r\n        <button onClick={this.takePhoto}>take a photo</button><br />\r\n        <canvas id=\"canvas2\" /><br />\r\n        {/* <img alt='' id=\"photocut\" src={this.state.imgSrc} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Main from './Main'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}